name: CI-Tests
on:
  pull_request:
    branches:
      - 'develop'

env:
  AWS_DEFAULT_REGION: 'us-east-1'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MODEL_NAME: 'fake-news-detect'
  ECR_REPO_NAME: 'prod-fake-news-detect-mlops-zoomcamp'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install pipenv && pipenv install --dev
          pipenv run pip install tf-nightly -q

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Run Unit tests
        run: |
          pipenv run pytest tests/
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
          DATA_PATH: 'data'

      - name: Lint
        run: pipenv run pylint --recursive=y .

      - name: Integration Test
        working-directory: 'integration-test'
        run: |
          ./run.sh

  tf-plan:
    runs-on: ubuntu-latest
    outputs:
      ecr_repo_name: ${{ steps.plan.outputs.ecr_repo }}
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - uses: hashicorp/setup-terraform@v2
      - name: TF plan
        id: plan
        working-directory: 'infrastructure'
        run: |
          echo "${SSH_PRIVATE_KEY}" > modules/ec2/webserver_key.pem
          chmod 400 modules/ec2/webserver_key.pem
          terraform init -backend-config="key=mlops-final-prod.tfstate" -reconfigure && terraform plan -var-file=vars/prod.tfvars
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
